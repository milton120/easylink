# Generated by Django 2.0.4 on 2018-06-25 14:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('bookmark', '0011_auto_20180625_1410'),
    ]

    operations = [
        migrations.CreateModel(
            name='LinkTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.IntegerField(choices=[(1, 'ACTIVE'), (2, 'DRAFT'), (3, 'INACTIVE'), (4, 'REMOVED'), (5, 'DENIED')], default=1)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('entry_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='bookmark_linktag_entry_by', to=settings.AUTH_USER_MODEL, verbose_name='entry by')),
                ('link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tag_link', to='bookmark.Link')),
                ('tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='link_tag', to='bookmark.Tag')),
                ('updated_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='bookmark_linktag_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='last updated by')),
            ],
            options={
                'verbose_name': 'Tag to Link',
                'verbose_name_plural': 'Tags to Link',
            },
        ),
        migrations.AddField(
            model_name='link',
            name='tags',
            field=models.ManyToManyField(related_name='link_of_tag', through='bookmark.LinkTag', to='bookmark.Tag'),
        ),
    ]
